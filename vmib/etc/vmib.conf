# This is the configuration file for the vmib.sh script.
#
# Lines starting with '#' are interpreted as comments. Blank lines are ignored.
# All valid configuration parameters are shown below. Lines starting with
# parameters not recognized by the program will be ignored. Do not enclose
# configuration options using single or double-quotes.
#
# Commandline parameters ALWAYS have priority over values specified in this
# file. Keep that in mind when something is not (but should be) working.


# Directory to be used as mountpoint for our build. The device specified using
# the commandline '-d' option or the 'DEVICE' parameter below will be mounted
# on this directory.
#
# You can specify an absolute value here, or use paths relative to the VMIB
# package by using the '$VMIB_HOME' variable, as shown below.
#
# Default value: $VMIB_HOME/var/build
#
#BUILD_DIR = $VMIB_HOME/var/build


# Device to be mounted on BUILD_DIR, where our minimal system will reside.
# This device must be a hard disk available under '/dev', such as '/dev/sdb'
# or '/dev/hdc'.
#
# WARNING: the disk selected here will be COMPLETELY wiped, and the program
# will create a single partition spanning the whole disk. The MBR code will
# also be overwritten. Be careful with your selection.
#
# This parameter can be used as a convenience feature, if you want to make
# multiple builds on the same disk and test the outcomes. If you're doing
# single runs, the '-d' commandline option might be better suited for your
# usage.
#
# Default value: unset
#
#DEVICE = 


# Directory to be used as a sort of "configuration overlay" to the minimal
# system. The files on this directory will be copied to the system verbatim.
# This is an useful option to customize your system post-installation.
#
# Keep in mind this directory must emulate the filesystem structure of the
# root ('/') directory. For example, suppose you want to copy a file to the
# destination
#
#   /home/user/file
#
# on the target minimal system. This file must then exist in the 'deploy'
# directory under the very same hierarchy, that is:
#
#   deploy/home/user/file
#
# You can use this option to configure system initialization, copy programs
# and packages that are not included in the default VMIB program, activate
# startup daemons on boot, and a myriad of other possibilities. Be creative!
#
# Default value: $VMIB_HOME/etc/deploy
#
#DEPLOY_DIR = $VMIB_HOME/etc/deploy


# List of packages to be installed on the minimal system. This parameter
# should contain a COMMA-SEPARATED list of packages; do not use spaces or
# other separators. The complete list of packages can be found on the
# 'lib/package.sh' file.
#
# Be careful when removing any of the preset defaults on this parameter.
# Critical components (such as the kernel, a libc or an init system), if
# removed, can render your minimal system unbootable.
#
# If needed, you may easily add new packages to VMIB:
#
#   1) copy one of the functions in the 'lib/package.sh' file
#   2) rename it as appropriate
#   3) select the USE flags that will be used to compile the package
#   4) write the package names to be installed as expected by Portage
#   5) add the new package to this configuration variable
#
# Keep in mind that Portage will pull any necessary dependencies, depending on
# the USE flags you specified. Run a few tests using 'emerge -pv' to verify
# you're not installing anything superfluous.
#
# Default value:
#     baselayout,
#     busybox,
#     extlinux,
#     glibc,
#     kernel,
#     pam,
#     sysvinit,
#     udev
#
#INSTALL_PACKAGES = baselayout,busybox,extlinux,glibc,kernel,pam,sysvinit,udev
